<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.aiolos</groupId>
  <artifactId>common</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <modules>
    <module>common-utils</module>
    <module>common-web</module>
    <module>common-exception</module>
    <module>common-enums</module>
    <module>common-model</module>
  </modules>

  <properties>
    <spring-boot.version>3.0.4</spring-boot.version>
    <spring-cloud.version>2022.0.0</spring-cloud.version>
    <spring-cloud-alibaba.version>2022.0.0.0</spring-cloud-alibaba.version>
    <dubbo.version>3.2.0</dubbo.version>
    <springdoc.version>2.0.4</springdoc.version>
    <lombok.version>1.18.26</lombok.version>
    <hutool.version>5.8.36</hutool.version>
    <guava.version>33.4.0-jre</guava.version>
    <java.version>17</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!-- 子模块版本号 -->
    <common-exception.version>1.0-SNAPSHOT</common-exception.version>
    <common-utils.version>1.0-SNAPSHOT</common-utils.version>
    <common-web.version>1.0-SNAPSHOT</common-web.version>
    <common-enums.version>1.0-SNAPSHOT</common-enums.version>
    <common-model.version>1.0-SNAPSHOT</common-model.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.aiolos</groupId>
        <artifactId>common-exception</artifactId>
        <version>${common-exception.version}</version>
      </dependency>
      <dependency>
        <groupId>com.aiolos</groupId>
        <artifactId>common-utils</artifactId>
        <version>${common-utils.version}</version>
      </dependency>
      <dependency>
        <groupId>com.aiolos</groupId>
        <artifactId>common-web</artifactId>
        <version>${common-web.version}</version>
      </dependency>
      <dependency>
        <groupId>com.aiolos</groupId>
        <artifactId>common-enums</artifactId>
        <version>${common-enums.version}</version>
      </dependency>
      <dependency>
        <groupId>com.aiolos</groupId>
        <artifactId>common-model</artifactId>
        <version>${common-model.version}</version>
      </dependency>

      <!-- 1. Spring Boot BOM -->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- 2. Spring Cloud BOM -->
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- 3. Spring Cloud Alibaba BOM -->
      <!-- 包含 Nacos、Sentinel、Dubbo 等 Alibaba 生态组件 -->
      <dependency>
        <groupId>com.alibaba.cloud</groupId>
        <artifactId>spring-cloud-alibaba-dependencies</artifactId>
        <version>${spring-cloud-alibaba.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- 4. Dubbo BOM -->
      <dependency>
        <groupId>org.apache.dubbo</groupId>
        <artifactId>dubbo-bom</artifactId>
        <version>${dubbo.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- 5. swagger -->
      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
        <version>${springdoc.version}</version>
      </dependency>

      <!-- 显式声明并且在dependencies中激活，外部项目可以覆盖版本 -->
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
        <scope>provided</scope>   <!-- provided：在编译时，不参与编译，只在运行时，由外部提供 -->
      </dependency>

      <dependency>
        <groupId>cn.hutool</groupId>
        <artifactId>hutool-core</artifactId>
        <version>${hutool.version}</version>
      </dependency>

      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- 如果dependencyManagement + dependencies都指定版本双重锁定，common的子模块不能覆盖版本，其他引入common的项目可以 -->
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
    </dependency>
    <dependency>
      <groupId>cn.hutool</groupId>
      <artifactId>hutool-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
  </dependencies>

  <!-- 插件管理 -->
  <build>
    <plugins>
      <!--  编译插件，统一编译环境，子模块不声明插件就继续父工程的配置 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.11.0</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
